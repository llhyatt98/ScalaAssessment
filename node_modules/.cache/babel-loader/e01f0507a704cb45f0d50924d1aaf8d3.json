{"ast":null,"code":"var _jsxFileName = \"/Users/llhyatt98/Desktop/Work/ScalaChallenge/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from 'react-redux';\nimport { addHikers, addBridges, updateBridge } from \"./actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [bridgeLength, setBridgeLength] = useState(0);\n  const bridges = useSelector(state => state.bridges);\n  const hikers = useSelector(state => state.hikers);\n  useEffect(() => {\n    // Get hikers\n    fetch('/api/hikers').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return response.json();\n    }).then(hikers => {\n      // TODO: Change this to SET_HIKERS and consume the new data\n      // TODO: Do similar for SET_BRIDGES\n      // Do the algorithm and submit!\n      if (hikers) dispatch(addHikers(hikers));\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    }); // Get bridges\n\n    fetch('/api/bridges').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return response.json();\n    }).then(bridges => {\n      if (bridges) dispatch(addBridges(bridges));\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, []);\n\n  const handleInputChange = event => {\n    setBridgeLength(parseInt(event.target.value));\n  };\n\n  const postBridge = () => {\n    if (bridgeLength && bridgeLength > 0) {\n      const lastBridge = bridges.bridgeData[bridges.bridgeData.length - 1];\n      const count = parseInt(lastBridge.id.slice(lastBridge.id.indexOf('_') + 1)); // Get the number from the hiker and increment\n\n      const newBridge = {\n        id: `bridge_${count + 1}`,\n        length: bridgeLength,\n        hikers: []\n      };\n      const updatedBridgeState = bridges.bridgeData;\n      updatedBridgeState.push(newBridge);\n      console.log(updatedBridgeState);\n      dispatch(addBridges(updatedBridgeState));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '80%',\n        border: '1px solid #E6E6E6',\n        backgroundColor: 'white',\n        padding: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [bridges && bridges.bridgeData && bridges.bridgeData.map((bridge, index) => {\n          return /*#__PURE__*/_jsxDEV(Bridge, {\n            bridge: bridge,\n            hikers: hikers,\n            updated: true\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginBottom: 5\n            },\n            children: \"Enter bridge length:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: bridgeLength,\n            onChange: handleInputChange,\n            style: {\n              width: 100\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: '#395D75',\n              color: 'white',\n              width: 120,\n              height: 50,\n              fontWeight: 'bold',\n              borderRadius: 10,\n              marginTop: 10\n            },\n            onClick: () => postBridge(),\n            children: \"Add Bridge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"* Scroll horizontally to see hikers *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"O7HT4xraAOLmmWCY4ytEFEmNMIE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\n\nfunction Bridge(props) {\n  _s2();\n\n  var _props$bridge;\n\n  const [speed, setSpeed] = useState(0);\n  const dispatch = useDispatch();\n  const hikersState = useSelector(state => state.hikers);\n\n  if (!(props !== null && props !== void 0 && props.bridge)) {\n    return null;\n  }\n\n  const handleInputChange = event => {\n    setSpeed(parseInt(event.target.value));\n  };\n\n  const postHiker = () => {\n    if (speed > 0) {\n      const lastHiker = hikersState.hikerData[hikersState.hikerData.length - 1];\n      const count = parseInt(lastHiker.id.slice(lastHiker.id.indexOf('_') + 1)); // Get the number from the hiker and increment\n\n      const newHiker = {\n        id: `hiker_${count + 1}`,\n        speed\n      };\n      const updatedHikerState = hikersState.hikerData;\n      const updatedBridgeState = props === null || props === void 0 ? void 0 : props.bridge.hikers;\n      updatedHikerState.push(newHiker);\n      updatedBridgeState.push(newHiker.id);\n      dispatch(updateBridge({\n        id: props.bridge.id,\n        updatedBridgeState\n      }));\n      dispatch(addHikers({\n        hikerData: updatedHikerState\n      }));\n    }\n  };\n\n  const hikers = (_props$bridge = props.bridge) === null || _props$bridge === void 0 ? void 0 : _props$bridge.hikers;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginBottom: 50,\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      border: '2px #E7E7E7',\n      borderRadius: 10,\n      padding: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"./assets/bridge.png\"),\n        alt: \"provider\",\n        width: 80,\n        height: 80,\n        style: {\n          borderRadius: 40\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 'bold',\n            color: 'black',\n            margin: '0 0'\n          },\n          children: props.bridge.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'black',\n            marginTop: 10,\n            marginBottom: 10,\n            fontSize: 14\n          },\n          children: [\"Length: \", props.bridge.length, \"m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        marginLeft: 20,\n        marginRight: 20,\n        minWidth: 140\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginBottom: 5\n        },\n        children: \"Enter hiker speed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: speed,\n        onChange: handleInputChange,\n        style: {\n          width: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: '#395D75',\n          color: 'white',\n          width: 100,\n          height: 30,\n          fontWeight: 'bold',\n          borderRadius: 10,\n          marginTop: 10\n        },\n        onClick: () => postHiker(),\n        children: \"Add Hiker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        overflowX: 'scroll',\n        whiteSpace: 'nowrap'\n      },\n      children: hikers && hikers.length && hikers.map((hiker, index) => {\n        var _props$hikers$hikerDa;\n\n        if (!hiker || !props.hikers) return null;\n        const bridgeHiker = (_props$hikers$hikerDa = props.hikers.hikerData) === null || _props$hikers$hikerDa === void 0 ? void 0 : _props$hikers$hikerDa.find(h1 => h1.id === hiker);\n\n        if (bridgeHiker) {\n          return /*#__PURE__*/_jsxDEV(Hiker, {\n            hiker: bridgeHiker\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 20\n          }, this);\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Bridge, \"ylWzjWa2o8SLGh5FVOwpq91rS5I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = Bridge;\n\nfunction Hiker(props) {\n  if (!(props !== null && props !== void 0 && props.hiker)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: \"#F1F1F1\",\n      margin: 10,\n      borderRadius: 10,\n      paddingTop: 20,\n      paddingBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"./assets/hiker.png\"),\n        alt: \"provider\",\n        width: 50,\n        height: 50,\n        style: {\n          borderRadius: 40\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: 10,\n        marginRight: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 'bold',\n            color: '#35E7F6',\n            margin: '0 0'\n          },\n          children: props.hiker.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'black',\n            marginTop: 10,\n            marginBottom: 10,\n            fontSize: 14\n          },\n          children: [\"Speed: \", props.hiker.speed, \"m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Hiker;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Bridge\");\n$RefreshReg$(_c3, \"Hiker\");","map":{"version":3,"sources":["/Users/llhyatt98/Desktop/Work/ScalaChallenge/src/App.tsx"],"names":["useEffect","useState","useDispatch","useSelector","addHikers","addBridges","updateBridge","App","dispatch","bridgeLength","setBridgeLength","bridges","state","hikers","fetch","then","response","ok","Error","json","catch","error","console","handleInputChange","event","parseInt","target","value","postBridge","lastBridge","bridgeData","length","count","id","slice","indexOf","newBridge","updatedBridgeState","push","log","display","alignItems","justifyContent","margin","flexDirection","width","border","backgroundColor","padding","map","bridge","index","marginBottom","color","height","fontWeight","borderRadius","marginTop","Bridge","props","speed","setSpeed","hikersState","postHiker","lastHiker","hikerData","newHiker","updatedHikerState","require","textAlign","fontSize","marginLeft","marginRight","minWidth","overflowX","whiteSpace","hiker","bridgeHiker","find","h1","Hiker","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from 'react-redux';\nimport { addHikers, addBridges, updateBridge } from \"./actions/actions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const [bridgeLength, setBridgeLength]: any = useState(0);\n  const bridges = useSelector((state: any) => state.bridges);\n  const hikers = useSelector((state: any) => state.hikers);\n\n  useEffect(() => {\n    // Get hikers\n    fetch('/api/hikers')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(hikers => {\n\n        // TODO: Change this to SET_HIKERS and consume the new data\n        \n        // TODO: Do similar for SET_BRIDGES\n\n        // Do the algorithm and submit!\n\n\n        if(hikers) dispatch(addHikers(hikers));\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error);\n      });\n\n    // Get bridges\n    fetch('/api/bridges')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(bridges => {\n        if(bridges) dispatch(addBridges(bridges));\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error);\n      });\n  }, []);\n\n  const handleInputChange = (event: any) => {\n    setBridgeLength(parseInt(event.target.value));\n  }\n\n  const postBridge = () => {\n    if(bridgeLength && bridgeLength > 0){\n      const lastBridge = bridges.bridgeData[bridges.bridgeData.length - 1]\n\n      const count = parseInt(lastBridge.id.slice(lastBridge.id.indexOf('_') + 1)) // Get the number from the hiker and increment\n      const newBridge = {id: `bridge_${count + 1}`, length: bridgeLength, hikers: []}\n\n      const updatedBridgeState = bridges.bridgeData;\n      updatedBridgeState.push(newBridge)\n\n      console.log(updatedBridgeState);\n      dispatch(addBridges(updatedBridgeState));\n    }\n  }\n\n  return (\n    <div className=\"App\" style={{display: 'flex', alignItems: 'center', justifyContent: 'center', margin: 20}}>\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: '80%',\n        border: '1px solid #E6E6E6',\n        backgroundColor: 'white',\n        padding: 20\n      }}>\n\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          { bridges && bridges.bridgeData && bridges.bridgeData.map((bridge: any, index: number) => {\n                return (\n                  <Bridge \n                    bridge={bridge} \n                    hikers={hikers}\n                    updated\n                    key={index}\n                  />\n                )\n            })\n          }\n\n          <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\n            <label style={{marginBottom: 5}}>\n              Enter bridge length:\n            </label>\n            <input type=\"number\" value={bridgeLength} onChange={handleInputChange} style={{width: 100}}/>\n            <button \n              style={{ backgroundColor: '#395D75', color: 'white', width: 120, height: 50, fontWeight: 'bold', borderRadius: 10, marginTop: 10}} \n              onClick={() => postBridge()}\n            >\n              Add Bridge\n            </button>\n          </div>\n\n          <p>* Scroll horizontally to see hikers *</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Bridge(props: any) {\n  const [speed, setSpeed] = useState(0);\n  const dispatch = useDispatch();\n  const hikersState = useSelector((state: any) => state.hikers);\n\n  if(!props?.bridge){\n    return null;\n  }\n\n  const handleInputChange = (event: any) => {\n    setSpeed(parseInt(event.target.value));\n  }\n\n  const postHiker = () => {\n    if(speed > 0){\n      const lastHiker = hikersState.hikerData[hikersState.hikerData.length - 1]\n\n      const count = parseInt(lastHiker.id.slice(lastHiker.id.indexOf('_') + 1)) // Get the number from the hiker and increment\n      const newHiker = {id: `hiker_${count + 1}`, speed}\n\n      const updatedHikerState = hikersState.hikerData\n      const updatedBridgeState = props?.bridge.hikers\n\n      updatedHikerState.push(newHiker)\n      updatedBridgeState.push(newHiker.id)\n\n      dispatch(updateBridge({id: props.bridge.id, updatedBridgeState}))\n      dispatch(addHikers({hikerData: updatedHikerState}))\n    }\n  }\n\n  const hikers = props.bridge?.hikers;\n  return (\n    <div style={{display: 'flex', flexDirection: 'row', marginBottom: 50, alignItems: 'center', justifyContent: 'flex-start', border: '2px #E7E7E7', borderRadius: 10, padding: 10}}>\n      <div>\n        <img src={require(\"./assets/bridge.png\")} alt=\"provider\" width={80} height={80} style={{borderRadius: 40}} />\n\n        <div style={{textAlign: 'center'}}>\n          <p style={{ fontWeight: 'bold', color: 'black', margin: '0 0'}}>{props.bridge.id}</p>\n          <p style={{ color: 'black', marginTop: 10, marginBottom: 10, fontSize: 14}}>Length: {props.bridge.length}m</p>\n        </div>\n      </div>\n\n      <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-evenly', alignItems: 'center', marginLeft: 20, marginRight: 20, minWidth: 140}}>\n        <label style={{marginBottom: 5}}>\n          Enter hiker speed:\n        </label>\n        <input type=\"number\" value={speed} onChange={handleInputChange} style={{width: 100}}/>\n        <button style={{ backgroundColor: '#395D75', color: 'white', width: 100, height: 30, fontWeight: 'bold', borderRadius: 10, marginTop: 10}} onClick={() => postHiker()}>Add Hiker</button>\n      </div>\n\n      <div style={{display: 'flex', flexDirection: 'row', overflowX: 'scroll', whiteSpace: 'nowrap'}}>\n        {hikers && hikers.length && hikers.map((hiker: any, index: number) => {\n          if(!hiker || !props.hikers) return null;\n\n          const bridgeHiker = props.hikers.hikerData?.find((h1: any) => h1.id === hiker);\n          if(bridgeHiker){\n            return <Hiker hiker={bridgeHiker} key={index}/>\n          }\n\n          return null; \n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction Hiker(props: any) {\n  if(!props?.hiker){\n    return null;\n  }\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', backgroundColor: \"#F1F1F1\", margin: 10, borderRadius: 10, paddingTop: 20, paddingBottom: 20}}>\n      <div style={{ marginRight: '10px' }}>\n        <img src={require(\"./assets/hiker.png\")} alt=\"provider\" width={50} height={50} style={{borderRadius: 40}} />\n      </div>\n      <div style={{marginLeft: 10, marginRight: 10}}>\n        <div style={{textAlign: 'left'}}>\n          <p style={{ fontWeight: 'bold', color: '#35E7F6', margin: '0 0'}}>{props.hiker.id}</p>\n          <p style={{ color: 'black', marginTop: 10, marginBottom: 10, fontSize: 14}}>Speed: {props.hiker.speed}m/s</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}