{"ast":null,"code":"var _jsxFileName = \"/Users/llhyatt98/Desktop/Work/ScalaChallenge/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from 'react-redux';\nimport { addHikers, addBridges, updateBridge } from \"./actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch(); // const [hikers, setHikers]: any = useState(null);\n  // const [bridges, setBridges]: any = useState(null);\n\n  const bridges = useSelector(state => state.bridges);\n  const hikers = useSelector(state => state.hikers);\n  useEffect(() => {\n    // Get hikers\n    fetch('/api/hikers').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return response.json();\n    }).then(hikers => {\n      // TODO: Change this to SET_HIKERS and consume the new data\n      // TODO: Do similar for SET_BRIDGES\n      // Do the algorithm and submit!\n      if (hikers) dispatch(addHikers(hikers));\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    }); // Get bridges\n\n    fetch('/api/bridges').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      return response.json();\n    }).then(bridges => {\n      if (bridges) dispatch(addBridges(bridges));\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: 800,\n        border: '1px solid #E6E6E6',\n        backgroundColor: 'white',\n        padding: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [bridges && bridges.bridgeData && bridges.bridgeData.map((bridge, index) => {\n          return /*#__PURE__*/_jsxDEV(Bridge, {\n            bridge: bridge,\n            hikers: hikers,\n            updated: true\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: '#395D75',\n            color: 'white',\n            width: 120,\n            height: 50,\n            fontWeight: 'bold',\n            borderRadius: 10\n          },\n          children: \"Add Bridge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"* Scroll horizontally to see hikers *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ssOjnktayaUdUazg/nXG9M5MrEw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\n\nfunction Bridge(props) {\n  _s2();\n\n  var _props$bridge;\n\n  const [speed, setSpeed] = useState('');\n  const dispatch = useDispatch();\n  const hikersState = useSelector(state => state.hikers);\n  const bridges = useSelector(state => state.bridges);\n\n  if (!(props !== null && props !== void 0 && props.bridge)) {\n    return null;\n  }\n\n  const handleInputChange = event => {\n    setSpeed(event.target.value);\n  };\n\n  const postHiker = () => {\n    const hiker = {\n      speed\n    };\n    const lastHiker = hikersState.hikerData[hikersState.hikerData.length - 1];\n    const count = parseInt(lastHiker.id[lastHiker.id.length - 1]) + 1; // Get the number from the hiker and increment\n\n    const newHiker = {\n      id: `hiker_${count}`,\n      speed\n    };\n    const updatedHikerState = hikersState.hikerData;\n    const updatedBridgeState = props === null || props === void 0 ? void 0 : props.bridge.hikers;\n    updatedHikerState.push(newHiker);\n    updatedBridgeState.push(newHiker.id); // TODO: Set updates in state\n    // dispatch(addHikers(updatedHikerState))\n\n    dispatch(updateBridge(updatedBridgeState));\n  };\n\n  const hikers = (_props$bridge = props.bridge) === null || _props$bridge === void 0 ? void 0 : _props$bridge.hikers;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      marginBottom: 50,\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      border: '2px #E7E7E7',\n      borderRadius: 10,\n      padding: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"./assets/bridge.png\"),\n        alt: \"provider\",\n        width: 80,\n        height: 80,\n        style: {\n          borderRadius: 40\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 'bold',\n            color: 'black',\n            margin: '0 0'\n          },\n          children: props.bridge.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'black',\n            marginTop: 10,\n            marginBottom: 10,\n            fontSize: 14\n          },\n          children: [\"Length: \", props.bridge.length, \"m\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        marginLeft: 20,\n        marginRight: 20,\n        minWidth: 140\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginBottom: 5\n        },\n        children: \"Enter hiker speed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: speed,\n        onChange: handleInputChange,\n        style: {\n          width: 100\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: '#395D75',\n          color: 'white',\n          width: 100,\n          height: 30,\n          fontWeight: 'bold',\n          borderRadius: 10,\n          marginTop: 10\n        },\n        onClick: () => postHiker(),\n        children: \"Add Hiker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        overflowX: 'scroll',\n        whiteSpace: 'nowrap'\n      },\n      children: hikers && hikers.length && hikers.map((hiker, index) => {\n        var _props$hikers$hikerDa;\n\n        if (!hiker || !props.hikers) return null;\n        const bridgeHiker = (_props$hikers$hikerDa = props.hikers.hikerData) === null || _props$hikers$hikerDa === void 0 ? void 0 : _props$hikers$hikerDa.find(h1 => h1.id === hiker);\n        return /*#__PURE__*/_jsxDEV(Hiker, {\n          hiker: bridgeHiker\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Bridge, \"VWTi9VydDhRWOp1vsCnkOAQ0obA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = Bridge;\n\nfunction Hiker(props) {\n  if (!(props !== null && props !== void 0 && props.hiker)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: \"#F1F1F1\",\n      margin: 10,\n      borderRadius: 10,\n      paddingTop: 20,\n      paddingBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginRight: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"./assets/hiker.png\"),\n        alt: \"provider\",\n        width: 50,\n        height: 50,\n        style: {\n          borderRadius: 40\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: 10,\n        marginRight: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 'bold',\n            color: '#35E7F6',\n            margin: '0 0'\n          },\n          children: props.hiker.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'black',\n            marginTop: 10,\n            marginBottom: 10,\n            fontSize: 14\n          },\n          children: [\"Speed: \", props.hiker.speed, \"m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Hiker;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Bridge\");\n$RefreshReg$(_c3, \"Hiker\");","map":{"version":3,"sources":["/Users/llhyatt98/Desktop/Work/ScalaChallenge/src/App.tsx"],"names":["useEffect","useState","useDispatch","useSelector","addHikers","addBridges","updateBridge","App","dispatch","bridges","state","hikers","fetch","then","response","ok","Error","json","catch","error","console","display","alignItems","justifyContent","margin","flexDirection","width","border","backgroundColor","padding","bridgeData","map","bridge","index","color","height","fontWeight","borderRadius","Bridge","props","speed","setSpeed","hikersState","handleInputChange","event","target","value","postHiker","hiker","lastHiker","hikerData","length","count","parseInt","id","newHiker","updatedHikerState","updatedBridgeState","push","marginBottom","require","textAlign","marginTop","fontSize","marginLeft","marginRight","minWidth","overflowX","whiteSpace","bridgeHiker","find","h1","Hiker","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from 'react-redux';\nimport { addHikers, addBridges, updateBridge } from \"./actions/actions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  // const [hikers, setHikers]: any = useState(null);\n  // const [bridges, setBridges]: any = useState(null);\n  const bridges = useSelector((state: any) => state.bridges);\n  const hikers = useSelector((state: any) => state.hikers);\n\n  useEffect(() => {\n    // Get hikers\n    fetch('/api/hikers')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(hikers => {\n\n        // TODO: Change this to SET_HIKERS and consume the new data\n        \n        // TODO: Do similar for SET_BRIDGES\n\n        // Do the algorithm and submit!\n\n\n        if(hikers) dispatch(addHikers(hikers));\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error);\n      });\n\n    // Get bridges\n    fetch('/api/bridges')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(bridges => {\n        if(bridges) dispatch(addBridges(bridges));\n      })\n      .catch(error => {\n        console.error('There was a problem with the fetch operation:', error);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\" style={{display: 'flex', alignItems: 'center', justifyContent: 'center', margin: 20}}>\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: 800,\n        border: '1px solid #E6E6E6',\n        backgroundColor: 'white',\n        padding: 20\n      }}>\n\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          { bridges && bridges.bridgeData && bridges.bridgeData.map((bridge: any, index: number) => {\n                return (\n                  <Bridge \n                    bridge={bridge} \n                    hikers={hikers}\n                    updated\n                    key={index}\n                  />\n                )\n            })\n          }\n\n          <button style={{ backgroundColor: '#395D75', color: 'white', width: 120, height: 50, fontWeight: 'bold', borderRadius: 10 }}>Add Bridge</button>\n          <p>* Scroll horizontally to see hikers *</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Bridge(props: any) {\n  const [speed, setSpeed] = useState('');\n  const dispatch = useDispatch();\n  const hikersState = useSelector((state: any) => state.hikers);\n  const bridges = useSelector((state: any) => state.bridges);\n\n  if(!props?.bridge){\n    return null;\n  }\n\n  const handleInputChange = (event: any) => {\n    setSpeed(event.target.value);\n  }\n\n  const postHiker = () => {\n    const hiker = { speed };\n\n    const lastHiker = hikersState.hikerData[hikersState.hikerData.length - 1]\n    const count = parseInt(lastHiker.id[lastHiker.id.length - 1]) + 1 // Get the number from the hiker and increment\n    const newHiker = {id: `hiker_${count}`, speed}\n\n    const updatedHikerState = hikersState.hikerData\n    const updatedBridgeState = props?.bridge.hikers\n\n    updatedHikerState.push(newHiker)\n    updatedBridgeState.push(newHiker.id)\n\n    // TODO: Set updates in state\n    // dispatch(addHikers(updatedHikerState))\n    dispatch(updateBridge(updatedBridgeState))\n\n  }\n\n  const hikers = props.bridge?.hikers;\n  return (\n    <div style={{display: 'flex', flexDirection: 'row', marginBottom: 50, alignItems: 'center', justifyContent: 'flex-start', border: '2px #E7E7E7', borderRadius: 10, padding: 10}}>\n      <div>\n        <img src={require(\"./assets/bridge.png\")} alt=\"provider\" width={80} height={80} style={{borderRadius: 40}} />\n\n        <div style={{textAlign: 'center'}}>\n          <p style={{ fontWeight: 'bold', color: 'black', margin: '0 0'}}>{props.bridge.id}</p>\n          <p style={{ color: 'black', marginTop: 10, marginBottom: 10, fontSize: 14}}>Length: {props.bridge.length}m</p>\n        </div>\n      </div>\n\n      <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-evenly', alignItems: 'center', marginLeft: 20, marginRight: 20, minWidth: 140}}>\n        <label style={{marginBottom: 5}}>\n          Enter hiker speed:\n        </label>\n        <input type=\"number\" value={speed} onChange={handleInputChange} style={{width: 100}}/>\n        <button style={{ backgroundColor: '#395D75', color: 'white', width: 100, height: 30, fontWeight: 'bold', borderRadius: 10, marginTop: 10}} onClick={() => postHiker()}>Add Hiker</button>\n      </div>\n\n      <div style={{display: 'flex', flexDirection: 'row', overflowX: 'scroll', whiteSpace: 'nowrap'}}>\n        {hikers && hikers.length && hikers.map((hiker: any, index: number) => {\n          if(!hiker || !props.hikers) return null;\n\n          const bridgeHiker = props.hikers.hikerData?.find((h1: any) => h1.id === hiker);\n          return <Hiker hiker={bridgeHiker} key={index}/>\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction Hiker(props: any) {\n  if(!props?.hiker){\n    return null;\n  }\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', backgroundColor: \"#F1F1F1\", margin: 10, borderRadius: 10, paddingTop: 20, paddingBottom: 20}}>\n      <div style={{ marginRight: '10px' }}>\n        <img src={require(\"./assets/hiker.png\")} alt=\"provider\" width={50} height={50} style={{borderRadius: 40}} />\n      </div>\n      <div style={{marginLeft: 10, marginRight: 10}}>\n        <div style={{textAlign: 'left'}}>\n          <p style={{ fontWeight: 'bold', color: '#35E7F6', margin: '0 0'}}>{props.hiker.id}</p>\n          <p style={{ color: 'black', marginTop: 10, marginBottom: 10, fontSize: 14}}>Speed: {props.hiker.speed}m/s</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}