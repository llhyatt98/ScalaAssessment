{"ast":null,"code":"var _jsxFileName = \"/Users/llhyatt98/Desktop/Work/ScalaChallenge/src/components/provider/providers.tsx\";\nimport '../../App.css';\nimport Clinic from '../clinic/clinic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Providers(props) {\n  return props.clinics && props.clinics.length ? props.clinics.map((clinic, index) => {\n    var _props$appointments;\n\n    const providerData = (_props$appointments = props.appointments) === null || _props$appointments === void 0 ? void 0 : _props$appointments.filter(appointment => appointment.clinicId === clinic.id);\n    return /*#__PURE__*/_jsxDEV(Clinic, {\n      clinic: clinic,\n      providers: providerData\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this);\n  }) : null;\n}\n\n_c = Providers;\nexport default Providers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Providers\");","map":{"version":3,"sources":["/Users/llhyatt98/Desktop/Work/ScalaChallenge/src/components/provider/providers.tsx"],"names":["Clinic","Providers","props","clinics","length","map","clinic","index","providerData","appointments","filter","appointment","clinicId","id"],"mappings":";AAAA,OAAO,eAAP;AACA,OAAOA,MAAP,MAAmB,kBAAnB;;;AAOA,SAASC,SAAT,CAAmBC,KAAnB,EAA2C;AAEzC,SAASA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACC,OAAN,CAAcC,MAA/B,GACLF,KAAK,CAACC,OAAN,CAAcE,GAAd,CAAkB,CAACC,MAAD,EAAcC,KAAd,KAAgC;AAAA;;AAChD,UAAMC,YAAY,0BAAGN,KAAK,CAACO,YAAT,wDAAG,oBAAoBC,MAApB,CAA4BC,WAAD,IAAsBA,WAAW,CAACC,QAAZ,KAAyBN,MAAM,CAACO,EAAjF,CAArB;AACA,wBACE,QAAC,MAAD;AACE,MAAA,MAAM,EAAEP,MADV;AAEE,MAAA,SAAS,EAAEE;AAFb,OAGOD,KAHP;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GATD,CADK,GAYL,IAZJ;AAcD;;KAhBQN,S;AAkBT,eAAeA,SAAf","sourcesContent":["import '../../App.css';\nimport Clinic from '../clinic/clinic';\n\ninterface IProvidersProps {\n  clinics: any;\n  appointments: any;\n}\n\nfunction Providers(props: IProvidersProps) {\n\n  return ( props.clinics && props.clinics.length ?\n      props.clinics.map((clinic: any, index: number) => {\n        const providerData = props.appointments?.filter((appointment: any) => appointment.clinicId === clinic.id);\n        return (\n          <Clinic \n            clinic={clinic} \n            providers={providerData}\n            key={index}\n          />\n        )\n      })\n    :\n      null\n  );\n}\n\nexport default Providers;"]},"metadata":{},"sourceType":"module"}