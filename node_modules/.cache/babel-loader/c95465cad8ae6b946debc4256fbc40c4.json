{"ast":null,"code":"var _jsxFileName = \"/Users/llhyatt98/Desktop/Work/ScalaAssessment/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Providers from './components/provider/providers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [clinics, setClinics] = useState(null);\n  const [appointments, setAppointments] = useState(null);\n  useEffect(() => {\n    // Making request to login when app mounts\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: 'myusername',\n        password: 'mypassword'\n      })\n    }).then(data => {\n      // Logged in, check sessionStorage for authToken before making other requests\n      const authToken = sessionStorage.getItem('authToken'); // Fetch clinics\n\n      fetch('/api/clinics', {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(response => response.json()).then(clinicData => {\n        if (clinicData && clinicData['clinics']) setClinics(clinicData['clinics']);\n      }).catch(error => {\n        console.error(error);\n      }); // Fetch appointments\n\n      fetch('/api/appointments', {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      }).then(response => response.json()).then(appointmentData => {\n        if (appointmentData && appointmentData['appointmentSlots']) setAppointments(appointmentData['appointmentSlots']);\n      }).catch(error => {\n        console.error(\"Error fetching appointments:\", error);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: clinics ? /*#__PURE__*/_jsxDEV(Providers, {\n        clinics: clinics,\n        appointments: appointments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5Ky6MHVjqqjy9lztVgtaOennVUQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/llhyatt98/Desktop/Work/ScalaAssessment/src/App.tsx"],"names":["useEffect","useState","Providers","App","clinics","setClinics","appointments","setAppointments","fetch","method","headers","body","JSON","stringify","username","password","then","data","authToken","sessionStorage","getItem","Authorization","response","json","clinicData","catch","error","console","appointmentData"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,iCAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,IAAAA,KAAK,CAAC,YAAD,EAAe;AAClBC,MAAAA,MAAM,EAAE,MADU;AAElBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFS;AAKlBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAE,YADS;AAEnBC,QAAAA,QAAQ,EAAE;AAFS,OAAf;AALY,KAAf,CAAL,CASGC,IATH,CASSC,IAAD,IAAe;AACrB;AACA,YAAMC,SAAS,GAAGC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAlB,CAFqB,CAIrB;;AACAZ,MAAAA,KAAK,CAAC,cAAD,EAAiB;AACpBE,QAAAA,OAAO,EAAE;AACPW,UAAAA,aAAa,EAAG,UAASH,SAAU;AAD5B;AADW,OAAjB,CAAL,CAKGF,IALH,CAKQM,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMGP,IANH,CAMQQ,UAAU,IAAI;AAClB,YAAGA,UAAU,IAAIA,UAAU,CAAC,SAAD,CAA3B,EAAwCnB,UAAU,CAACmB,UAAU,CAAC,SAAD,CAAX,CAAV;AACzC,OARH,EASGC,KATH,CASSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAXH,EALqB,CAkBrB;;AACAlB,MAAAA,KAAK,CAAC,mBAAD,EAAsB;AACzBE,QAAAA,OAAO,EAAE;AACPW,UAAAA,aAAa,EAAG,UAASH,SAAU;AAD5B;AADgB,OAAtB,CAAL,CAKGF,IALH,CAKQM,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMGP,IANH,CAMQY,eAAe,IAAI;AACvB,YAAGA,eAAe,IAAIA,eAAe,CAAC,kBAAD,CAArC,EAA2DrB,eAAe,CAACqB,eAAe,CAAC,kBAAD,CAAhB,CAAf;AAC5D,OARH,EASGH,KATH,CASSC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD,OAXH;AAaD,KAzCD;AA0CD,GA5CQ,EA4CN,EA5CM,CAAT;AA8CA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,gBACGtB,OAAO,gBACN,QAAC,SAAD;AACE,QAAA,OAAO,EAAEA,OADX;AAEE,QAAA,YAAY,EAAEE;AAFhB;AAAA;AAAA;AAAA;AAAA,cADM,GAMN;AAPJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAhEQH,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport Providers from './components/provider/providers';\n\nfunction App() {\n  const [clinics, setClinics] = useState(null);\n  const [appointments, setAppointments] = useState(null);\n\n  useEffect(() => {\n    // Making request to login when app mounts\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: 'myusername',\n        password: 'mypassword'\n      })\n    }).then((data: any) => {\n      // Logged in, check sessionStorage for authToken before making other requests\n      const authToken = sessionStorage.getItem('authToken');\n\n      // Fetch clinics\n      fetch('/api/clinics', {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      })\n        .then(response => response.json())\n        .then(clinicData => {\n          if(clinicData && clinicData['clinics']) setClinics(clinicData['clinics']);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n\n      // Fetch appointments\n      fetch('/api/appointments', {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      })\n        .then(response => response.json())\n        .then(appointmentData => {\n          if(appointmentData && appointmentData['appointmentSlots']) setAppointments(appointmentData['appointmentSlots']);\n        })\n        .catch(error => {\n          console.error(\"Error fetching appointments:\", error);\n        });\n\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {clinics ?\n          <Providers\n            clinics={clinics}\n            appointments={appointments}\n          />\n        :\n          null\n        }\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}